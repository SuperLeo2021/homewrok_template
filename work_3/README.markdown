# 贪心算法实验报告

## 学号：20201120486

>专业：计算机科学与技术

## 实验目的：
>编程实现经典的贪心算法，理解贪心算法设计的基本思想、程序实现的相关
技巧，加深对贪心算法设计与分析思想的理解。通过程序的执行时间测试结果，
与理论上的时间复杂度结论进行对比、分析和验证。


## 实验原理

>对列表元素做一次遍历，使用一个全局变量Max来记录到当前的最大值，此变量初始化为一个负数，如果当前元素大于Max，那么令Max等于当前元素，然后进行查看下一个元素.采用逐步构造最优解的方法。在每个
阶段，都作出一个当前最优的决策（在一定的标准下）。决策一旦作出，就不可再更改（作出贪心决策的依据称为贪心准则）。


## 算法的时间复杂度分析
算法的时间复杂度取决于对 vi/wi 排序的时间复杂度，若选择 MergeSort 排序
算法，则以上算法的时间复杂度为 O(nlogn)。

## 实验内容
>(1) 编程实现以上 KnapsackGreedy 算法，并进行测试，保证程序正确无误。
其中，分别在程序开始和结束处设置记录系统当前时间的变量、用于计算程序执
行的时间（以毫秒(ms)作为时间的计数单位）。
(2) 设定一个 m 值，测试随着 n 增加、程序执行时间增加的趋势。分别使用
1.1 节中的随机数生成算法生成 n 个随机数作为 n 个物品的重量，再生成 n 个随
14
机数作为 n 个物品的价值（n=10, 20, 40, 100, 200, 400, 800, 2000）。记录随着 n
增加程序的执行时间，并使用 MS Excel、Matlab 或 Origin 等图表绘制工具生成
程序执行时间的对比曲线图。
(3) 与理论上的时间复杂度结论进行对比分析，完成实验报告

>实验代码展示：[](main.c)
## 实验预期结果与实际结果
\
实验过程及实验结果（C版）
>设定一个m为10的值，n=200作为实例参考

![main.c](./picture/SS6CTQBZGB%25NFN%25J%7DQV%25TFG.png)


图标分析：
![](./picture/carry.png)
