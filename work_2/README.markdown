# 动态规划算法实验报告

## 学号：20201120486

>计算机科学与技术

## 实验目的：
编程实现经典的动态规划算法，理解动态规划算法设计的基本思想、程序实
现的相关技巧，加深对动态规划算法设计与分析思想的理解。通过程序的执行时
间测试结果，与理论上的时间复杂度结论进行对比、分析和验证。


## 实验原理
编程实现以上求解 0-1 背包问题的动态规划算法，并通过手动设置、生成随
机数获得实验数据。记录随着输入规模增加算法的执行时间，分析并以图形方式
展现增长率；测试、验证、对比算法的时间复杂度。


## 实验输入数据集
测试 C 值不变的情形下随着 n 增加、程序执行时间增加的趋势。对于
C=200、400、800、2000 这四种情形，分别使用 1.1 节中的随机数生成算法生成
n 个随机数作为 n 个物品的重量，再生成 n 个随机数作为 n 个物品的价值（n=10, 
20, 40, 100, 200, 400, 800, 2000）。对于每个 C 值，记录随着 n 增加程序的执行时
间，并使用 MS Excel、Matlab 或 Origin 等图表绘制工具生成各不同 C 值情形下
程序执行时间的对比曲线图

## 实验内容

1. [main.c](main.c) 算法实现的C语言版本

## 实验预期结果与实际结果
+ 实验预期结果：14


实验过程及实验结果（C版）

```算法模块
KnapsackDP ({w1, w2, …, wn}, {v1, v2, …, vn}, C) 
for i=0 to n do 
 m[i,0]=0 
end for 
for j=0 to C do 
 m[0,j]=0 
end for 
for i=1 to n do 
 for j=1 to C do 
9
 m[i,j]=m[i-1,j] 
 if wi<=j then 
 m[i,j]=max{m[i,j],m[i-1,j-wi]+vi} 
 end if 
end for 
end for 
return m[n,C]

```
