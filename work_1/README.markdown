# 实验一：分治算法

## 学号：20201120486

>计算机科学与技术

## 实验目的：
通过排序算法的程序实现和执行时间测试，与理论上的结论进行对比分析，
深入理解算法时间复杂度渐进性态和和增长率的概念；理解分治算法设计的基本
思想、递归程序实现的基本方法，加深对分治算法设计与分析思想的理解。


## 实验原理
算法的计算时间取决于算法中某些操作的执行次数，这些操作是算法时
间复杂度分析的依据。增长率反映了算法的计算时间复杂度，即随着算法输入规
模的增加、算法计算时间增加的趋势。算法的计算时间复杂度针对输入数据的等
价类来分析或测试。


## 实验输入数据集
  通过程序生成（伪）随机数，作为实验用测试数据。可使用编程语言自带的
random 函数生成，也可以采用一些有效的随机数生成算法生成，例如“线性同
余法”，基于该算法，只要参数选择合适，所产生的伪随机数就能满足均匀性和
独立性，与真正的随机数具有相近的性质。

## 实验内容文字叙述
    以冒泡排序、合并排序和快速排序算法为例，以生成的随机数作为实验中使
用的测试数据。对每个算法，记录程序执行中随着测试数据增加算法基本操作执
行次数，分析并以图形方式展现增长率；对以上三个排序算法，对比随着测试数
据增加算法增长率变化趋势；测试、验证、对比算法时间复杂度的理论结论。
## 实验内容代码链接

1. [main.c](main.c) 算法实现的C语言版本


## 实验预期结果与实际结果
+ 实验预期结果：
(篇幅有限，此处仅仅只列举10和100的随机数)
实验过程及实验结果（C版）
> 随机输入十个数:
![10.png](./picture/10.png)
> 随机输入一百个数：
![100_1.png](./picture/100_1.png)
![100_2.png](./picture/100_2.png)

## 实验结果图表分析：



结论：1.总的来说平均排序的速度“快排”> “归并”> “堆排”>“冒泡”。但是实际情况不同，即排序数组不同，显示的结果也有可能不同。因为各种排序都有自己的适应场景！！！
2.因为快排和堆排都是不稳定的，归并排序是稳定的，且平均来说归并的速度是仅次于快排速度的，所以，首选排序可以使用“归并排序”（数据量大时）。但归并排序稍微复杂一点，所以在性能上足够时，可以使用算法稍微简单点的“堆排”，再次选归并排序，再次之快排。
